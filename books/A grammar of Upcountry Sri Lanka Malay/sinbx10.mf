
%
% Created by Vasantha Saparamadu <vsaparam@ocs.mq.edu.au>
% by modifying sinh10.mf
% 08 January 1996
%

%     Copyright (C) 1994, The Wellcome Trust, London.
%
%
%     This program is free software; you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation; either version 2 of the License, or
%     (at your option) any later version.
%
%     This program is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%     GNU General Public License for more details.
%
%     You should have received a copy of the GNU General Public License
%     along with this program; if not, write to the Free Software
%     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%
%     Contacts:
%
%     1/ The author:  Yannis Haralambous <Yannis.Haralambous@univ-lille1.fr>
%
%     2/ Commissioned by
%        The Wellcome Institute for the History of Medicine,
%        183 Euston Road,
%        London NW1 2BE,
%        England.
%        Contact person: Dominik Wujastyk <D.Wujastyk@ucl.ac.uk>


u#:=20/36pt#;      % unit width
width_adj#:=10/36pt#;    % width adjustment for certain characters
serif_fit#:=0pt#;    % extra sidebar near lowercase serifs
cap_serif_fit#:=6/36pt#;  % extra sidebar near uppercase serifs
letter_fit#:=0pt#;    % extra space added to all sidebars

body_height#:=270/36pt#;  % height of tallest characters
asc_height#:=250/36pt#;    % height of lowercase ascenders
cap_height#:=247/36pt#;    % height of caps
fig_height#:=232/36pt#;    % height of numerals
x_height#:=160/36pt#;    % height of lowercase without ascenders
math_axis#:=90/36pt#;    % axis of symmetry for math symbols
bar_height#:=85/36pt#;    % height of crossbar in lowercase e
comma_depth#:=70/36pt#;    % depth of comma below baseline
desc_depth#:=70/36pt#;    % depth of lowercase descenders

crisp#:=0pt#;      % diameter of serif corners
tiny#:=1.5 * 8/36pt#;    % diameter of rounded corners
fine#:=1.5 * 7/36pt#;    % diameter of sharply rounded corners
thin_join#:=1.5 * 7/36pt#;    % width of extrafine details
hair#:=1.5 * 9/36pt#;    % lowercase hairline breadth
stem#:=41/36pt#;    % lowercase stem breadth
curve#:=46/36pt#;    % lowercase curve breadth
ess#:=38/36pt#;      % breadth in middle of lowercase s
flare#:=45/36pt#;    % diameter of bulbs or breadth of terminals
dot_size#:=56/36pt#;    % diameter of dots
cap_hair#:=11/36pt#;    % uppercase hairline breadth
cap_stem#:=51/36pt#;    % uppercase stem breadth
cap_curve#:=55/36pt#;    % uppercase curve breadth
cap_ess#:=53/36pt#;    % breadth in middle of uppercase s
rule_thickness#:=.5pt#;    % thickness of lines in math symbols

dish#:=1/36pt#;      % amount erased at top or bottom of serifs
bracket#:=10/36pt#;    % vertical distance from serif base to tangent
jut#:=25/36pt#;      % protrusion of lowercase serifs
cap_jut#:=34/36pt#;    % protrusion of uppercase serifs
beak_jut#:=11/36pt#;    % horizontal protrusion of beak serifs
beak#:=70/36pt#;    % vertical protrusion of beak serifs
vair#:=8/36pt#;    % vertical diameter of hairlines
notch_cut#:=10pt#;    % maximum breadth above or below notches
bar#:=17/36pt#;      % lowercase bar thickness
slab#:=17/36pt#;    % serif and arm thickness
cap_bar#:=17/36pt#;    % uppercase bar thickness
cap_band#:=17/36pt#;    % uppercase thickness above/below lobes
cap_notch_cut#:=10pt#;    % max breadth above/below uppercase notches
serif_drop#:=3/36pt#;    % vertical drop of sloped serifs
stem_corr#:=2/36pt#;    % for small refinements of stem breadth
vair_corr#:=1/36pt#;    % for small refinements of hairline height
apex_corr#:=0pt#;    % extra width at diagonal junctions

o#:=4/36pt#;      % amount of overshoot for curves
apex_o#:=3/36pt#;    % amount of overshoot for diagonal junctions

slant:=0;      % tilt ratio $(\Delta x/\Delta y)$
fudge:=1;      % factor applied to weights of heavy characters
math_spread:=.5;    % extra openness of math symbols
superness:=8/11;    % parameter for superellipses
superpull:=1/8;      % extra openness inside bowls
beak_darkness:=.4;    % fraction of triangle inside beak serifs
ligs:=2;      % level of ligatures to be included

square_dots:=false;    % should dots be square?
hefty:=false;      % should we try hard not to be overweight?
serifs:=true;      % should serifs and bulbs be attached?
monospace:=false;    % should all characters have the same width?
variant_g:=false;    % should an italic-style g be used?
low_asterisk:=false;    % should the asterisk be centered at the axis?
math_fitting:=false;    % should math-mode spacing be used?

mode_setup; font_setup;
if unknown FontSize: FontSize := 10pt#; fi
FX# := FontSize * 0.10 * 0.434;
FY# := FontSize * 0.10 * 0.434; 

picture temp_shape;
shfat#:=1.5 * 2.3 * .5[FX#,FY#];
shthin#:=1.5 * max(0.5 * .5[FX#,FY#],hair#);
shheight#:=18.9FY#;
shdepth#:=7.3FY#;
usual_left#:=1FX#;
usual_right#:=1FX#;
virama_width#:=3.5FX#+0.5shthin#+0.5*0.55[shfat#,shthin#];
hor_bar_height#:=8.65FY#;
define_pixels(FX,FY,shfat,shthin,shheight,shdepth,usual_left,usual_right,virama_width,
              hor_bar_height);
def shvar = [shfat,shthin] enddef;

font_slant slant; font_x_height x_height#;
if monospace: font_normal_space 9u#; % no stretching or shrinking
 font_quad 18u#;
 font_extra_space 9u#;
else: font_normal_space 6u#+2letter_fit#;
 font_normal_stretch 3u#; font_normal_shrink 2u#;
 font_quad 18u#+4letter_fit#;
 font_extra_space 2u#;
fi

endinput;
